// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/3/a/PC.hdl
/**
 * A 16-bit counter.
 * if      reset(t): out(t+1) = 0
 * else if load(t):  out(t+1) = in(t)
 * else if inc(t):   out(t+1) = out(t) + 1
 * else              out(t+1) = out(t)
 */
CHIP PC {
    IN in[16], reset, load, inc;
    OUT out[16];
    
    PARTS:
    Inc16 (in=regOut , out=inPlusOne ); //Incrementing Add16 (a =in, b[0] =true, b[1..15]=false, out=inPlusOne);
    Mux16 (a=regOut, b=inPlusOne, sel=inc, out=incOut); // incrementing the reg's val
    Mux16 (a=incOut, b=in, sel=load, out=loadOut); // loading the reg's val with the input
    Mux16 (a=loadOut, b=false, sel=reset, out=finalOut); // reset the reg's val
    Register (in=finalOut , load=true , out=regOut, out=out);// saving current val in the Reg
}
